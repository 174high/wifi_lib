#include "control_wifi.h"




int  command_System(int argcount,const char* args[],const char* binary_name)
{
        char myoutput_array[1000];
	int i,ret;	
	
	sprintf(myoutput_array, "%s", binary_name);
        for(i = 0; i < argcount; ++i)
        {
                strcat(myoutput_array, " ");
                strcat(myoutput_array, args[i]);
        }
        ret=system(myoutput_array);
        return ret;
}

int  turn_On_Wifi(void)
{	
	int  ret;
	const char* args[] = {WIFI_DRIVER_MODULE_PATH};

	ret=command_System(1,args,"insmod");
	
	return ret;
}

int  turn_Off_Wifi(void)
{
        int  ret;
        const char* args[] = {WIFI_DRIVER_MODULE_PATH};

        ret=command_System(1,args,"rmmod");
        return ret;

}

int search_Wifi_Spot(void)
{
     
	int  ret;
	
	const char* args[] = {"wlan0","up"};
		
	ret=command_System(2,args,"ifconfig");

	args[0] = "wlan0" ;
	args[1] = "scan" ;
	
	
        ret=command_System(2,args,"iw");

        return ret;
}


#ifdef ANDROID
  //andoid 
int connect_AP(const char* ssid,const char* psk)
{
	int  ret;
	char* ssid_wpa;
	const char* args[] = {"-d","-Dnl80211","-c",SUPP_CONFIG_FILE,"-iwlan0","-B"};


        ret=command_System(6,args,"wpa_supplicant");
	
        args[0]="-p";
	args[1]= CONTROL_IFACE_PATH;
	args[2]="add_network";
	args[3]= "0";

        ret=command_System(4,args,"wpa_cli");

    	sprintf(ssid_wpa, "%s", "\"\'");

	strcat(ssid_wpa,ssid);

	strcat(ssid_wpa,"\'\"");

	args[0]="-p";
	args[1]=CONTROL_IFACE_PATH;
	args[2]="0";
	args[3]="ssid";
	args[4]=ssid_wpa;

        ret=command_System(5,args,"wpa_cli");

        args[0]="-p";
	args[1]=CONTROL_IFACE_PATH;
	args[2]="0";
	args[3]="psk";
	args[4]=psk;

       ret=command_System(5,args,"wpa_cli");

   	args[0]="-p";
	args[1]=CONTROL_IFACE_PATH;
	args[2]="select_network";
	args[3]="0";

       ret=command_System(4,args,"wpa_cli");

   	args[0]="-p";
	args[1]=CONTROL_IFACE_PATH;
	args[2]="enable_network";
	args[3]="0";

       ret=command_System(4,args,"wpa_cli");

	args[0]="wlan0";

	ret=command_System(1,args,DHCP_TOOL);
	

}




#else 

//linux  WPA/WPA2-Personal 

int connect_AP(const char* ssid,const char* psk)
{
        const char* args[] = {"-d","-Dnl80211","-c",SUPP_CONFIG_FILE,"-iwlan0","-B"};
	char* ssid_wpa;
	

        ret=command_System(6,args,"wpa_supplicant");
        
        args[]={"-iwlan0","add_network","0"};

        ret=command_System(3,args,"wpa_ci");

        sprintf(ssid_wpa, "%s", "\"\'");

	strcat(ssid_wpa,ssid);

	strcat(ssid_wpa,"\'\"");

        args[]={"-iwlan0","0","ssid",ssid_wpa};

        ret=command_System(4,args,"wpa_cli");

       args[]={"-iwlan0","0","psk",psk};

       ret=command_System(4,args,"wpa_cli");

   	args[]={"-iwlan0","select_network","0"};

       ret=command_System(3,args,"wpa_cli");

   	args[]={"-iwlan0","enable_network","0"};

       ret=command_System(3,args,"wpa_cli");

	args[]={"wlan0"};

	ret=command_System(1,args,DHCP_TOOL);
	
}

#endif


int disconnect_AP(voi)
{
	int ret;	
	const char* args[] = {"-ef | grep wpa_supplicant | awk '{print $2}' | xargs kill -9"};
	
	ret=command_system(1,args,"ps");

	args[0]="-ef | grep  wpa_cli | awk '{print $2}' | xargs kill -9";	

    	ret=command_system(1,args,"ps");

        args[0]="-ef | grep ";
	args[1]= DHCP_TOOL;
	args[2]="| awk '{print $2}' | xargs kill -9"; 

	ret=command_system(3,args,"ps");
	
	return ret;
}

int clear_AP_History(void)
{
	int ret;	
	const char* args[] = {SUPP_CONFIG_FILE};
	
	ret=command_System(1,args,"rm -rf");
	
	return ret;
}


